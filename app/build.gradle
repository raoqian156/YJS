import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
//apply plugin: 'com.aliyun.ams.emas-services'

def verStr = versionStr()

static def releaseTime() {
    DateFormat df = new SimpleDateFormat("MMdd_HHmm")
    return df.format(Calendar.getInstance(Locale.CHINA).getTime())
}

static def versionStr() {
    DateFormat df = new SimpleDateFormat(".20.HHmm.MMdd")
    int versionKey = versionKey();
    return versionKey + df.format(Calendar.getInstance(Locale.CHINA).getTime())
}

static def versionKey() {
    return 90
}

android {
    signingConfigs {
        config {
            storeFile file('C:\\Users\\Administrator\\Desktop\\ysk.jks')
            storePassword '123789'
            keyAlias 'yjs'
            keyPassword '123789'
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.yskrq.yjs"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode versionKey()
        versionName verStr

        signingConfig signingConfigs.config
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "447f2da0d311500893b0445d", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.config
            buildConfigField "boolean", "SHOW_LOG", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.config
            buildConfigField "boolean", "SHOW_LOG", "true"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def fileName
                    if (variant.buildType.name == "release") {
                        // 输出apk名称为
                        fileName = "R-yunjishi-v${defaultConfig.versionName}.apk"
                    } else {
                        fileName = "D-yunjishi-v${defaultConfig.versionName}.apk"
                    }
                    def outFile = output.outputFile
                    if (outFile != null && outFile.name.endsWith('.apk')) {
                        outputFileName = fileName  //  output.outputFile 改为 outputFileName
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation project(path: ':comon_base')
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
//    implementation project(path: ':keeplive')
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.tencent.bugly:crashreport:3.0.0'

    implementation 'cn.jiguang.sdk:jpush:3.8.6'  // 此处以JPush 3.8.6 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.6.0'  // 此处以JCore 2.6.0 版本为例。

//    implementation 'com.aliyun.ams:alicloud-android-push:3.2.3'
}